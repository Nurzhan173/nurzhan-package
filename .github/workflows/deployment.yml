# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Install dependencies
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Get repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci

  # Build
  build:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # build docs
  build-docs:
    - needs: build
    - runs-on: ubuntu-latest

    - name: build docs
      run: npm run generate-docs

  # npm publish
  npm-publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 'v16.13.2'
          registry-url: 'https://registry.npmjs.org'
          scope: '@nurzhan173'

      - name: Configure Git
        run: |
          git config user.email "nurzhann173@gmail.com"
          git config user.name "nurzhan173"

      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v3
        with:
          node-version: 'v16.13.2'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@nurzhan173'

      - name: Authenticate with the GitHub Package Registry
        run:
          echo "//npm.pkg.github.com:_authToken=${{ secrets.GH_TOKEN }}" >
          ~/.npmrc

      # Publish to GitHub Packages
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
#      # Setup .npmrc file to publish to npm
#           - uses: actions/setup-node@v3
#           with:
#             node-version: 'v16.13.2'
#             registry-url: 'https://registry.npmjs.org'
#             scope: '@jamesives'
#
#           - name: Configure Git
#             run: |
#               git config user.email "iam@jamesiv.es"
#               git config user.name "James Ives"
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/setup-node@v3
#      with:
#        node-version: "18"
#      - run: npm ci
#      - uses: JS-DevTools/npm-publish@v2
#        with:
#          token: ${{ secrets.GH_TOKEN }}
#          registry: "https://npm.pkg.github.com"
#      - uses: actions/checkout@v3
#      # Setup .npmrc file to publish to npm
#      - uses: actions/setup-node@v3
#        with:
#          node-version: '16.x'
#          registry-url: 'https://registry.npmjs.org'
#      - run: npm ci
#      - uses: JS-DevTools/npm-publish@v2
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          registry: "https://npm.pkg.github.com"
#      - run: npm publish
#        env:
#          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#    steps:
#      - name: Get repo code
#        uses: actions/checkout@v3
#      - name: Install dependencies
#        run: npm ci
#      - name: build docs
#        run: npx jsdoc -c jsdoc.conf.json
#      - name: Publish NPM package
#        run: |
#          npm config set //registry.npmjs.org/:_authToken=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
#          npm publish

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-docs, npm-publish]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
