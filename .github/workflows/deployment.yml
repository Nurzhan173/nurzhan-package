# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

 # need to create dev branch pipline

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Install dependencies
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Get repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci

  # Run eslint
  lint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Get repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run eslint
        run: npm run lint

  # Run tests
  run-tests:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Get repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test

# add e2e test

  # Build
  build:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # build docs
  build-docs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: build docs
        run: npm run generate-docs

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-docs]
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
    when: manual
